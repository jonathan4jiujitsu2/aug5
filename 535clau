' Working Hairpin Filter with SOLID 3D Geometry
' Two methods: Direct box creation OR proper sweep method

' =====================
' Initialize dimensions
' =====================
Dim Wio, L1, L2, L3, L4, L5, L6, L7, L9, L10, L11, L12, L13, L14, L15
Dim line_width, thickness

Wio = 7.0
L1 = 50
L2 = 51
L3 = 26.28
L4 = 20.48
L5 = 103.36
L6 = 100.26
L7 = 14.3378
L9 = 2.65
L10 = 8.58
L11 = 45.118
L12 = 28
L13 = 55
L14 = 133
L15 = 108

line_width = 2
thickness = 0.65

' =====================
' Initialize HFSS
' =====================
Dim oAnsoftApp, oDesktop, oProject, oDesign, oEditor
Set oAnsoftApp = CreateObject("AnsoftHfss.HfssScriptInterface")
Set oDesktop = oAnsoftApp.GetAppDesktop()
oDesktop.RestoreWindow
Set oProject = oDesktop.NewProject
Set oDesign = oProject.InsertDesign("HFSS", "HairpinFilter", "DrivenModal", "")
Set oEditor = oDesign.SetActiveEditor("3D Modeler")

' Set units
oEditor.SetModelUnits Array("NAME:Units Parameter", "Units:=", "mil", "Rescale:=", false)

' Calculate important points
Dim x3, y3, x4, y4, x5, y5, x6, y6, x7, y7, x8, y8, x9, y9, x10, y10, x11, y11
x3 = L1 + L3 * 0.7071
y3 = L3 * 0.7071
x4 = L1 + L4 * 0.7071
y4 = Wio + L4 * 0.7071
x5 = x3: y5 = y3 + L5
x6 = x4: y6 = y4 + L6
x7 = x6 - L7 * 0.7071: y7 = y6 + L7 * 0.7071
x8 = x5 + L7 * 0.7071: y8 = y5 + L7 * 0.7071
x9 = x8: y9 = y8 + L9
x10 = x7: y10 = y7 + L10
x11 = x9 + L11: y11 = y9

' =====================
' METHOD 1: Create solid boxes directly (GUARANTEED TO WORK)
' =====================

Sub CreateSolidSegment(name, x1, y1, x2, y2, color)
    ' Calculate box parameters for a line segment
    Dim dx, dy, length, angle, centerX, centerY
    dx = x2 - x1
    dy = y2 - y1
    length = Sqr(dx*dx + dy*dy)
    centerX = (x1 + x2) / 2
    centerY = (y1 + y2) / 2
    
    ' Create a box for this segment
    Call oEditor.CreateBox( _
        Array("NAME:BoxParameters", _
            "XPosition:=", CStr(x1) & "mil", _
            "YPosition:=", CStr(y1 - line_width/2) & "mil", _
            "ZPosition:=", "0mil", _
            "XSize:=", CStr(length) & "mil", _
            "YSize:=", CStr(line_width) & "mil", _
            "ZSize:=", CStr(thickness) & "mil"), _
        Array("NAME:Attributes", _
            "Name:=", name, _
            "Flags:=", "", _
            "Color:=", color, _
            "Transparency:=", 0, _
            "PartCoordinateSystem:=", "Global", _
            "MaterialValue:=", Chr(34) & "copper" & Chr(34), _
            "SolveInside:=", false))
    
    ' Rotate the box if needed (for angled segments)
    If dx <> 0 Then
        angle = Atn(dy/dx) * 180 / 3.14159
        If dx < 0 Then angle = angle + 180
        If Abs(angle) > 0.1 Then ' Only rotate if significant angle
            Call oEditor.Rotate( _
                Array("NAME:Selections", "Selections:=", name, "NewPartsModelFlag:=", "Model"), _
                Array("NAME:RotateParameters", _
                    "RotateAxis:=", "Z", _
                    "RotateAngle:=", CStr(angle) & "deg", _
                    "RotateCenter:=", Array(CStr(centerX) & "mil", CStr(centerY) & "mil", CStr(thickness/2) & "mil")))
        End If
    ElseIf dy <> 0 Then
        ' Vertical line
        angle = 90
        Call oEditor.Rotate( _
            Array("NAME:Selections", "Selections:=", name, "NewPartsModelFlag:=", "Model"), _
            Array("NAME:RotateParameters", _
                "RotateAxis:=", "Z", _
                "RotateAngle:=", "90deg", _
                "RotateCenter:=", Array(CStr(centerX) & "mil", CStr(centerY) & "mil", CStr(thickness/2) & "mil")))
    End If
End Sub

' =====================
' METHOD 2: Proper sweep method (ALTERNATIVE)
' =====================

Sub CreateSweptSegment(name, x1, y1, x2, y2, color)
    ' Create polyline path (centerline)
    Call oEditor.CreatePolyline( _
        Array("NAME:PolylineParameters", _
            "IsPolylineCovered:=", true, _
            "IsPolylineClosed:=", false, _
            Array("NAME:PolylinePoints", _
                Array("NAME:PLPoint", "X:=", CStr(x1) & "mil", "Y:=", CStr(y1) & "mil", "Z:=", "0mil"), _
                Array("NAME:PLPoint", "X:=", CStr(x2) & "mil", "Y:=", CStr(y2) & "mil", "Z:=", "0mil") _
            ), _
            Array("NAME:PolylineSegments", _
                Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 0, "NoOfPoints:=", 2) _
            ), _
            Array("NAME:PolylineXSection", _
                "XSectionType:=", "None", _
                "XSectionOrient:=", "Auto", _
                "XSectionWidth:=", "0mil", _
                "XSectionTopWidth:=", "0mil", _
                "XSectionHeight:=", "0mil", _
                "XSectionNumSegments:=", "0", _
                "XSectionBendType:=", "Corner") _
        ), _
        Array("NAME:Attributes", _
            "Name:=", name & "_path", _
            "Flags:=", "", _
            "Color:=", color, _
            "Transparency:=", 0, _
            "PartCoordinateSystem:=", "Global", _
            "MaterialValue:=", Chr(34) & "copper" & Chr(34), _
            "SolveInside:=", false))
    
    ' Create cross-section rectangle
    Call oEditor.CreateRectangle( _
        Array("NAME:RectangleParameters", _
            "IsCovered:=", true, _
            "XStart:=", CStr(-line_width/2) & "mil", _
            "YStart:=", "0mil", _
            "ZStart:=", "0mil", _
            "Width:=", CStr(line_width) & "mil", _
            "Height:=", CStr(thickness) & "mil", _
            "WhichAxis:=", "Y"), _
        Array("NAME:Attributes", _
            "Name:=", name & "_cross", _
            "Flags:=", "", _
            "Color:=", "(128 128 128)", _
            "Transparency:=", 0, _
            "PartCoordinateSystem:=", "Global", _
            "MaterialValue:=", Chr(34) & "copper" & Chr(34), _
            "SolveInside:=", false))
    
    ' Sweep the cross-section along the path
    Call oEditor.SweepAlongPath( _
        Array("NAME:Selections", "Selections:=", name & "_cross", "NewPartsModelFlag:=", "Model"), _
        Array("NAME:PathSweepParameters", _
            "PathObject:=", name & "_path", _
            "DraftAngle:=", "0deg", _
            "DraftType:=", "Round", _
            "CheckFaceFaceIntersection:=", false, _
            "TwistAngle:=", "0deg"))
    
    ' Clean up path
    Call oEditor.Delete(Array("NAME:Selections", "Selections:=", name & "_path"))
    
    ' Rename the result
    Call oEditor.ChangeProperty( _
        Array("NAME:AllTabs", _
            Array("NAME:Geometry3DAttributeTab", _
                Array("NAME:PropServers", name & "_cross"), _
                Array("NAME:ChangedProps", _
                    Array("NAME:Name", "Value:=", name)))))
End Sub

' =====================
' Choose your method and create segments
' =====================

' USING METHOD 1 (Direct boxes - simpler and more reliable)
CreateSolidSegment "Seg_Wio", 0, 0, 0, Wio, "(255 0 0)"
CreateSolidSegment "Seg_Line1", 0, Wio, L1, Wio, "(0 255 0)"
CreateSolidSegment "Seg_Line2", 0, 0, L1, 0, "(0 0 255)"
CreateSolidSegment "Seg_Line3", L1, 0, x3, y3, "(255 128 0)"
CreateSolidSegment "Seg_Line4", L1, Wio, x4, y4, "(128 0 255)"
CreateSolidSegment "Seg_Line5", x3, y3, x5, y5, "(255 0 255)"
CreateSolidSegment "Seg_Line6", x4, y4, x6, y6, "(0 255 255)"
CreateSolidSegment "Seg_Line7", x6, y6, x7, y7, "(255 200 0)"
CreateSolidSegment "Seg_Line8", x5, y5, x8, y8, "(0 255 128)"
CreateSolidSegment "Seg_Line9", x8, y8, x9, y9, "(255 128 128)"
CreateSolidSegment "Seg_Line10", x7, y7, x10, y10, "(128 128 255)"
CreateSolidSegment "Seg_Line11", x9, y9, x11, y11, "(255 0 100)"
CreateSolidSegment "Seg_Line12", x10, y10, x10 + L12 * 0.7071, y10 + L12 * 0.7071, "(0 255 200)"
CreateSolidSegment "Seg_Line13", x10 + L12 * 0.7071, y10 + L12 * 0.7071, x10 + L12 * 0.7071 + L13, y10 + L12 * 0.7071, "(128 255 0)"
CreateSolidSegment "Seg_Line14", x10 + L12 * 0.7071 + L13, y10 + L12 * 0.7071, x10 + L12 * 0.7071 + L13, y11 - L15, "(0 255 0)"
CreateSolidSegment "Seg_Line15", x11, y11, x11, y11 - L15, "(255 0 200)"
CreateSolidSegment "Seg_Launch", x11, y11 - L15, x10 + L12 * 0.7071 + L13, y11 - L15, "(255 128 0)"

' =====================
' Unite all segments
' =====================
Dim allSegments
allSegments = "Seg_Wio,Seg_Line1,Seg_Line2,Seg_Line3,Seg_Line4,Seg_Line5,Seg_Line6,Seg_Line7,Seg_Line8,Seg_Line9,Seg_Line10,Seg_Line11,Seg_Line12,Seg_Line13,Seg_Line14,Seg_Line15,Seg_Launch"

Call oEditor.Unite(Array("NAME:Selections", "Selections:=", allSegments), _
    Array("NAME:UniteParameters", "KeepOriginals:=", false))

MsgBox "Solid hairpin filter created successfully!"
